Parameters:
  KeyPair:
    Description: Amazon EC2 Key Pair
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: jumpbox
Resources:
  VPCSubnet:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/vpcsubnet.yaml

  ekscluster:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCSubnet
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/eks_cluster.yml

  S3RoleforCiCd:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCSubnet
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/cicds3role.yaml

  JenkinsInst:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3RoleforCiCd
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/jenk.yaml
      Parameters:
        KeyName: !Ref KeyPair

  NexusServer:
    Type: AWS::CloudFormation::Stack
    DependsOn: JenkinsInst
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/nexus.yaml
      Parameters:
        KeyName: !Ref KeyPair

  SonarServer:
    Type: AWS::CloudFormation::Stack
    DependsOn: JenkinsInst
    Properties:
      TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/sonar.yaml
      Parameters:
        KeyName: !Ref KeyPair


















  # db01qa:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: App01qa
  #   Properties:
  #     TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/db01qa.yaml
  #     Parameters:
  #       KeyName: !Ref KeyPair

  # App01qa:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: JenkinsInst
  #   Properties:
  #     TemplateURL: https://vpro-cicd-templates.s3.amazonaws.com/stack-template/app01qa.yaml
  #     Parameters:
  #       KeyName: !Ref KeyPair







#aws cloudformation create-stack --stack-name eks --template-body file://cicdtemp.yml --capabilities CAPABILITY_NAMED_IAM


# started_date=$(date '+%H:%M:%S')
# start=`date +%s`
# while true; do 
#   if [[ $(aws cloudformation describe-stacks --region us-east-1 --stack-name eks --query "Stacks[*].StackStatus" --output text) == CREATE_IN_PROGRESS ]]
#   then
#     echo -e "EKS Cluster status : CREATE IN PROGRESS \n"
#     sleep 10
#   elif [[ $(aws cloudformation describe-stacks --region us-east-1 --stack-name eks --query "Stacks[*].StackStatus" --output text) == CREATE_COMPLETE ]]
#   then
#     echo -e "EKS Cluster status : SUCCESSFULLY CREATED \n"
#     end=`date +%s`
#     runtime=$((end-start))
#     finished_date=$(date '+%H:%M:%S')
#     echo "started at :" $started_date 
#     echo "finished at :" $finished_date
#     hours=$((runtime / 3600)); minutes=$(( (runtime % 3600) / 60 )); seconds=$(( (runtime % 3600) % 60 )); echo "Total time : $hours h $minutes min $seconds sec"
#     break
#   else
#     echo -e "EKS Cluster status : $(aws cloudformation describe-stacks --region us-east-1 --stack-name eks --query "Stacks[*].StackStatus" --output text) \n"
#     break
#   fi
# done